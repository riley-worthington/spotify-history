{"ast":null,"code":"var _jsxFileName = \"/Users/rileyworthington/projects/spotify-history/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport format from 'date-fns/format';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    const urlParams = new URLSearchParams(window.location.search);\n    const isUserAuthorized = urlParams.has('authorized') ? true : false;\n    this.state = {\n      isUserAuthorized,\n      musicHistory: []\n    };\n  }\n\n  componentDidMount() {\n    const isUserAuthorized = this.state.isUserAuthorized;\n\n    if (isUserAuthorized) {\n      fetch('http://localhost:5000/history').then(res => res.json()).then(data => {\n        this.setState({\n          musicHistory: data\n        });\n      }).catch(error => console.log(error));\n      const pusher = new Pusher(\"\".concat(process.env.PUSHER_APP_KEY), {\n        cluster: \"\".concat(process.env.PUSHER_APP_CLUSTER),\n        encrypted: true\n      });\n      const channel = pusher.subscribe('spotify');\n      channel.bind('update-history', data => {\n        this.setState(prevState => {\n          const arr = data.musicHistory.map(item => {\n            const isPresent = prevState.musicHistory.find(e => e.played_at === item.played_at);\n\n            if (isPresent === undefined) {\n              return item;\n            } else {\n              return null;\n            }\n          }).filter(Boolean);\n          return {\n            musicHistory: arr.concat(prevState.musicHistory)\n          };\n        });\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          isUserAuthorized = _this$state.isUserAuthorized,\n          musicHistory = _this$state.musicHistory;\n    const connectSpotify = isUserAuthorized ? '' : React.createElement(\"a\", {\n      href: \"http://localhost:5000/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Connect your Spotify account\");\n\n    const TableItem = (item, index) => React.createElement(\"tr\", {\n      key: item.played_at,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, item.track_name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, format(item.played_at, 'D MMM YYYY, hh:mma')));\n\n    const RecentlyPlayed = () => React.createElement(\"div\", {\n      className: \"recently-played\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Recent Tracks\"), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Song title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Time\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, musicHistory.map((e, index) => TableItem(e, index)))));\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Spotify Listening History\"), connectSpotify, musicHistory.length !== 0 ? React.createElement(RecentlyPlayed, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rileyworthington/projects/spotify-history/client/src/App.js"],"names":["React","Component","Pusher","format","App","constructor","urlParams","URLSearchParams","window","location","search","isUserAuthorized","has","state","musicHistory","componentDidMount","fetch","then","res","json","data","setState","catch","error","console","log","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","bind","prevState","arr","map","item","isPresent","find","e","played_at","undefined","filter","Boolean","concat","render","connectSpotify","TableItem","index","track_name","RecentlyPlayed","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pusher from 'pusher-js';\nimport format from 'date-fns/format';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    const urlParams = new URLSearchParams(window.location.search);\n    const isUserAuthorized = urlParams.has('authorized') ? true : false;\n\n    this.state = {\n      isUserAuthorized,\n      musicHistory: [],\n    };\n  }\n\n  componentDidMount() {\n    const { isUserAuthorized } = this.state;\n\n    if (isUserAuthorized) {\n      fetch('http://localhost:5000/history')\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            musicHistory: data,\n          });\n        })\n        .catch(error => console.log(error));\n\n      const pusher = new Pusher(`${process.env.PUSHER_APP_KEY}`, {\n        cluster: `${process.env.PUSHER_APP_CLUSTER}`,\n        encrypted: true,\n      });\n\n      const channel = pusher.subscribe('spotify');\n      channel.bind('update-history', data => {\n        this.setState(prevState => {\n          const arr = data.musicHistory\n            .map(item => {\n              const isPresent = prevState.musicHistory.find(\n                e => e.played_at === item.played_at\n              );\n              if (isPresent === undefined) {\n                return item;\n              } else {\n                return null;\n              }\n            })\n            .filter(Boolean);\n          return {\n            musicHistory: arr.concat(prevState.musicHistory),\n          };\n        });\n      });\n    }\n  }\n\n  render() {\n    const { isUserAuthorized, musicHistory } = this.state;\n    const connectSpotify = isUserAuthorized ? (\n      ''\n    ) : (\n      <a href='http://localhost:5000/login'>Connect your Spotify account</a>\n    );\n\n    const TableItem = (item, index) => (\n      <tr key={item.played_at}>\n        <td>{index + 1}</td>\n        <td>{item.track_name}</td>\n        <td>{format(item.played_at, 'D MMM YYYY, hh:mma')}</td>\n      </tr>\n    );\n\n    const RecentlyPlayed = () => (\n      <div className='recently-played'>\n        <h2>Recent Tracks</h2>\n        <table className='table'>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Song title</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>{musicHistory.map((e, index) => TableItem(e, index))}</tbody>\n        </table>\n      </div>\n    );\n\n    return (\n      <div className='App'>\n        <header className='header'>\n          <h1>Spotify Listening History</h1>\n          {connectSpotify}\n          {musicHistory.length !== 0 ? <RecentlyPlayed /> : null}\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}